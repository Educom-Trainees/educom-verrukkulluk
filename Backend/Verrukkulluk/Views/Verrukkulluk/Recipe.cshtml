@model Verrukkulluk.Models.DetailsModel;
@{
    ViewData["Title"] = "Recept";
}

<div class="parent-container d-flex flex-wrap">
        <!--Login block-->
        @if(!Model.SignInManager.IsSignedIn(User))
        {
            <div class="container col-4 mt-2 d-none d-xl-block">
            @await Html.PartialAsync("../Shared/LoginBlock.cshtml", Model)
            </div>
        }

    <!--Recipe-->
    <div class="container col-12 col-xl-8">
        <div class="container mt-4">
            <div class="card shadow">
                <div class="row">
                    <div class="col-xl-6">
                        <img class="card-img-top img-crop" style="height:32rem" src="@Url.Action("GetImage", "Image", new { id = Model.Recipe.ImageObjId })" alt="Afbeelding van @Model.Recipe.Title">
                    </div>
                    <div class="col-xl-6">
                        <div class="card-header">
                                <div class="d-inline-block">    
                                    <i class="bi bi-people-fill lighter-red"></i> @Model.Recipe.NumberOfPeople
                                </div>
                                <div class="d-inline-block">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-currency-euro lighter-red" viewBox="0 0 16 16">
                                        <path d="M4 9.42h1.063C5.4 12.323 7.317 14 10.34 14c.622 0 1.167-.068 1.659-.185v-1.3c-.484.119-1.045.17-1.659.17-2.1 0-3.455-1.198-3.775-3.264h4.017v-.928H6.497v-.936q-.002-.165.008-.329h4.078v-.927H6.618c.388-1.898 1.719-2.985 3.723-2.985.614 0 1.175.05 1.659.177V2.194A6.6 6.6 0 0 0 10.341 2c-2.928 0-4.82 1.569-5.244 4.3H4v.928h1.01v1.265H4v.928z"/>
                                    </svg> @Model.Recipe.Price
                                </div>
                                <div class="d-inline-block">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-fire lighter-red" viewBox="0 0 16 16">
                                        <path d="M8 16c3.314 0 6-2 6-5.5 0-1.5-.5-4-2.5-6 .25 1.5-1.25 2-1.25 2C11 4 9 .5 6 0c.357 2 .5 4-2 6-1.25 1-2 2.729-2 4.5C2 14 4.686 16 8 16m0-1c-1.657 0-3-1-3-2.75 0-.75.25-2 1.25-3C6.125 10 7 10.5 7 10.5c-.375-1.25.5-3.25 2-3.5-.179 1-.25 2 1 3 .625.5 1 1.364 1 2.25C11 14 9.657 15 8 15"/>
                                    </svg> @Model.Recipe.Calories
                                </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h2 class="darker-green">@Model.Recipe.Title</h2></div>
                                <div>    
                                    <div class="d-inline-block card-recipe-stars">
                                        @{
                                            double averageRatingRounded = Math.Round(Model.Recipe.AverageRating * 2) / 2;
                                        }

                                        @for (int i = 0; i < 5; i++)
                                        {
                                            if (i < (int)averageRatingRounded)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            else if (i == (int)averageRatingRounded && averageRatingRounded % 1 > 0)
                                            {
                                                <i class="bi bi-star-half"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star"></i>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row subtitle">
                                <div class="col-6 justify-all">
                                    <div class="d-flex">
                                        <div class="dropdown dropstart text-end">
                                            <button type="button" class="btn btn-primary dropdown-toggle" id="allergiesButton" data-bs-toggle="dropdown">
                                            Allergenen
                                            </button>
                                            <ul class="dropdown-menu allergy-list">
                                                @if (!Model.Recipe.Allergies.Any())
                                                {
                                                    <li class="d-inline allergy-list">
                                                        <div class="allergy-item">
                                                            Geen allergenen in dit gerecht
                                                        </div>
                                                    </li>
                                                }
                                                @foreach(Allergy Allergy in Model.Recipe.Allergies){
                                                        <li class="inline-flex allergy-list"><img src ="@Url.Action("GetImage", "Image", new {id = Allergy.ImgObjId})" alt="@Allergy.Name" style="width:70px; height:auto"></li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="d-flex justify-content-end">
                                        <h4 class="darker-green px-2">Keuken</h4>
                                        <p class="pl-2">@Model.Recipe.KitchenType.Name </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=" card-body card-body-recipe"><p class="text-start"><br>@Model.Recipe.Description</p>                          
                        </div>
                        <div class="card-footer">
                            <div class="d-flex">
                                    @foreach (DishType dishType in Model.Recipe.DishTypes)
                                    {
                                        <span class="dishTypeBadge mb-2"> @dishType.Name </span>
                                    }
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <form id="addToShoppingListForm" method="post" action="@Url.Action("AddRecipeToShoppingList", "Verrukkulluk")">
                                        <input type="hidden" id="recipeId" name="recipeId" value="@Model.Recipe.Id" />
                                        <button type="submit" id="addToShoppingListButton" class="btn btn-primary"><h3>Op lijst</h3></button>
                                    </form>
                            </div>
                            <div class="d-inline-block">
                                <input type="checkbox" id="heartCheckbox">
                                <label id="heartButton" class="btn btn-primary" for="heartCheckbox">
                                    <i class="bi bi-heart"></i>
                                </label>  
                            </div>
                        </div>
                        <div id="successMessage"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Nav-->
    <div class="container mt-5 navblock">
        <!--Nav tabs-->
        <ol class="nav nav-tabs nav-tabs-recipe" role="tablist">
            <li class="nav-item nav-item-recipe">
                <a class="nav-link nav-link-recipe active darker-green" data-bs-toggle="tab" href="#ingredients"><h4>Ingrediënten</h4></a>
            </li>
            <li class="nav-item nav-item-recipe">
                <a class="nav-link nav-link-recipe darker-green" data-bs-toggle="tab" href="#preparation"><h4>Bereidingswijze</h4></a>
            </li>
            <li class="nav-item nav-item-recipe">
                <a class="nav-link nav-link-recipe darker-green" data-bs-toggle="tab" href="#comments"><h4>Opmerkingen</h4></a>
            </li>
                <li class="nav-item nav-item-recipe">
                    <a class="nav-link nav-link-recipe darker-green" data-bs-toggle="tab" href="#rating"><h4>Geef beoordeling</h4></a>
                </li>
        </ol>

        <!-- Tab panes -->
        <div class="tab-content tab-content-recipe">
            <div id="ingredients" class="container tab-pane tab-pane-recipe active">
                    <div class="chevron-recipe">
                        <span class="darker-green bi bi-chevron-up"></span>
                    </div>
                    <div class="scrolling-content">
                @foreach (Ingredient ingredient in Model.Recipe.Ingredients)
                {
                    <div class="ingredient-item">
                        <div class="image-column">
                            <img class="ingredient" src="@Url.Action("GetImage", "Image", new { id = ingredient.Product.ImageObjId })" alt="Afbeelding van een ingrediënt">
                        </div>
                        <div class="info-column">
                            <h3 class="darker-green">@ingredient.Product.Name</h3>
                            <p>@ingredient.Product.Description</p>
                            <h4 class="d-inline darker-green">Hoeveelheid: </h4><p class="d-inline">@(ingredient.Amount) @ingredient.Product.IngredientType</p>
                        </div>
                    </div>
                }
                </div>
                    <div class="chevron-recipe">
                        <span class="darker-green bi bi-chevron-down"></span>
                    </div>
            </div>
            <div id="preparation" class="container tab-pane tab-pane-recipe fade">
                    <div class="chevron-recipe">
                     <span class="darker-green bi bi-chevron-up"></span>
                    </div>
                    <div class="scrolling-content">
                    @if (Model.Recipe != null && !string.IsNullOrEmpty(Model.Recipe.Instructions))
                    {
                        <ol class="numbered-step">
                            @foreach (var steps in Model.Recipe.Instructions.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries))
                            {
                                <li>
                                    <p>@steps.Trim()</p>
                                </li>
                            }
                        </ol>
                    }
                    </div>
                    <div class="chevron-recipe">
                    <span class="darker-green bi bi-chevron-down"></span>
                    </div>
            </div>
@*             @foreach (Comment comment in Model.Recipe.Comments){
            <div id="comments" class="container tab-pane tab-pane-recipe fade"><br>
                <h3 class="darker-green">comment.Creator.Name</h3>
                <p>comment.Content</p>
            </div>
            } *@
            <div id="comments" class="container tab-pane tab-pane-recipe fade"><br>
                    <div class="chevron-recipe">
                     <span class="darker-green bi bi-chevron-up"></span>
                    </div>
                    <div class="scrolling-content">
                    <div class="comments-item">
                <div class="image-column">
                @*<img class="profile-picture" src="@Url.Action("GetImage", "Image", new { id = Model.Recipe.ImageObjId })" alt="Profielfoto">*@
                <img class="profile-picture" src="/Images/jan.jpg" alt="Profielfoto">
                </div>
                <div class="info-column">
                <h3 class="darker-green">Jan (Volendam)</h3>
                <p>Het was een heerlijk gerecht.</p>
                </div>
                </div>
                    </div>
                    <div class="chevron-recipe">
                    <span class="darker-green bi bi-chevron-down"></span>
                    </div>
            </div>
            <div id="rating" class="container tab-pane tab-pane-recipe fade">
                <br>
                <div class="chevron-recipe">
                    <span class="darker-green bi bi-chevron-up"></span>
                </div>
                <div class="scrolling-content">
                        <div class="rating-container">
                            <p>Wat vond u van dit gerecht?</p>
                            <input type="hidden" id="recipeId" value="@Model.Recipe.Id">
                            <div class= "regular-text" id="userRating"></div>
                            <div class="d-inline-block rating-recipe-stars" id="recipeRating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="bi bi-star large-star" data-value="@i"></i>
                                }
                            </div>
                            <button type="button" id="confirmRating" class="btn btn-rating">Geef Beoordeling</button>
                            <br><div class="regular-text" id="ratingMessage"></div>
                        </div>
                </div>
                <div class="chevron-recipe">
                    <span class="darker-green bi bi-chevron-down"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="container col-sm-12 col-md-8 d-block d-xl-none mt-5">
        <!--Login block-->
        @if(!Model.SignInManager.IsSignedIn(User))
        {
            @await Html.PartialAsync("../Shared/LoginBlock.cshtml", Model)
        }
    </div>
</div>
